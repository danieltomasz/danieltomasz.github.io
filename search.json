[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Embracing complexity",
    "section": "",
    "text": "Posts\n\n\n\n\n\n\nMental functions and cognitive ontologies\n\n\n\n\n\n\n\ncognitive sciences\n\n\n\n\n\n\n\n\n\n\n\nFeb 24, 2021\n\n\nDaniel Borek\n\n\n\n\n\n\nNo matching items\n\n\n\n\nNotes\n\n\n\n\n\n\nHow to get relative path of script or notebook in Python with Pathlib library\n\n\n\n\n\n\n\nPython\n\n\nPathlib\n\n\nhowto\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 2021\n\n\nDaniel Borek\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/about.html",
    "href": "posts/about.html",
    "title": "About",
    "section": "",
    "text": "Hi there! 👋 I’m Daniel Borek, an open science and unix/linux enthusiast and a PhD candidate learning more about the nature of neural oscillations.\nCurrently I am based in Brussels, Belgium. I studied physics within MISMaP programme and philosophy at University of Warsaw, I worked as data analyst doing data visualisation in R. I ❤️ cinema."
  },
  {
    "objectID": "posts/2021/02/mental-functions-cognitive-ontologies/index.html",
    "href": "posts/2021/02/mental-functions-cognitive-ontologies/index.html",
    "title": "Mental functions and cognitive ontologies",
    "section": "",
    "text": "Mental functions and cognitive ontologies\nThere is a ongoing discussion in cognitive sciences about cognitive ontologies. Luiz Pessoa asked about why we divide cognitive functions like attention, memory, executive control the way we did. He tracks it to the beginning of psychology as discipline and influence of William James and later, when the cognitive revolution started, to Ulric Neisser’s Cognitive Psychology book. There was a really interesting discussion in replies to this tweet.\n\nThis echoes discussion between two camps, which most famous proponents are currently György Buzsáki and David Poeppel. Here is a discussion between them in one of “Brain inspired” episodes.\nMaybe I state something trivial, but I think all these terms used in cognitive sciences are a little bit blurry. It allows scientists to escape any clear borders between processes defined by these terms. On the other hand, scientists in a theory are well aware that there is no process in isolation (but this sometimes is much harder to operationalize in practice).\nMany different philosophers and neuroscientists told much about this topic. Currently, neuroinformatics could provide some nice tools. Read more in this review by Russell A. Poldrack and Tal Yarkoni."
  },
  {
    "objectID": "posts/2021/03/til-relative-path-notebook/index.html",
    "href": "posts/2021/03/til-relative-path-notebook/index.html",
    "title": "How to get relative path of script or notebook in Python with Pathlib library",
    "section": "",
    "text": "Problem statement: You want to get an absolute path of your project where a file/notebook is located and join it with a string pointing to a folder.\nSolution:\nThis function will give you an absolute path in relation to a current python script or notebook.\nfrom pathlib import Path\n\ndef get_project_root() -> Path:\n    try:\n        # This will give you a Path object pointing to the parent of the folder where the script is located.\n        # If your script is `/root/scripts/script.py`, the result will be an absolute path '/root'.\n        return Path(__file__).parent.parent\n    except NameError as error:\n        # This will give you  root folder of the project if this runned through jupyter notebook\n        return Path().joinpath().absolute().parents[0]\n    except Exception as exception:\n        print(exception)\nWhen you will work with Path paths don’t add trailing slashes when joining paths. The code below:\nroot= get_project_root()\npath_to_file = Path.joinpath(root, '/data/data.feather')\nwill result in path_to_file = /data/final.feather.\nTo obtain path_to_file = /root/data/final.feather you shouldn’t use the slash at the begining:\nroot= get_project_root()\npath_to_file = Path.joinpath(root, 'data/data.feather')"
  }
]